18 4Sum
Statement:-
Given an array nums of n integers, return an array of all the unique quadruplets [nums[a], nums[b], nums[c], nums[d]] such that:
0 <= a, b, c, d < n
a, b, c, and d are distinct.
nums[a] + nums[b] + nums[c] + nums[d] == target
You may return the answer in any order.
Example 1:
Input: nums = [1,0,-1,0,-2,2], target = 0
Output: [[-2,-1,1,2],[-2,0,0,2],[-1,0,0,1]]
#------------------------
code:-
#------------------------
def function(l,target):
    l1=[]
    if len(l)<3:
        return []
    else:
        l.sort()
        n=len(l)
        for i in range(n-3):
            if i>0 and l[i]==l[i-1]:
                continue
            for j in range(i+1,n-2):
                if j>i+1 and l[j]==l[j-1]:
                    continue
                left=j+1
                right=n-1
                while(left<right):
                    s=l[i]+l[j]+l[left]+l[right]
                    if s==target:
                        l1.append([l[i],l[j],l[left],l[right]])
                        while left<right and l[left]==l[left+1]:
                            left=left+1
                        while left<right and l[right]==l[right-1]:
                            right=right-1
                        left+=1
                        right-=1
                    elif s<target:
                        left=left+1
                    else:
                        right=right-1
        return l1

#l=[1,0,-1,0,-2,2]
#l=[2,2,2,2,2]
l=[-1,0,1,2,-1,-4]
#l1=[]
print(function(l,-1))
